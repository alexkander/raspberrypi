version: '3.4'

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  front-tier:
    name: internet-monitoring-front-tier
  back-tier:
    name: internet-monitoring-back-tier

services:
  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - 9000:9000
      # - 9443:9443
      # - 8000:8000
    volumes:
      - ./volumens/portainer/data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - front-tier

  nodeexp:
    image: prom/node-exporter:latest
    restart: always
    privileged: true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - 9100:9100
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - back-tier

  # prometheus:
  #   image: prom/prometheus:latest
  #   restart: always
  #   volumes:
  #     # - /etc/localtime:/etc/localtime:ro
  #     - ./config/prometheus/:/etc/prometheus/
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--storage.tsdb.retention.time=90d'
  #     - '--web.console.libraries=/usr/share/prometheus/console_libraries'
  #     - '--web.console.templates=/usr/share/prometheus/consoles'
  #   ports:
  #     - 9090:9090
  #   links:
  #     - ping:ping
  #     - speedtest:speedtest
  #   networks:
  #     - back-tier
# {% if domain_name_enable and domain_name and domain_prometheus %}
#     depends_on:
#       - nginx-proxy
#     environment:
#       - VIRTUAL_HOST={{ domain_prometheus }}.{{ domain_name }}
#       - VIRTUAL_PORT=9090
# {% endif %}

  # grafana:
  #   image: grafana/grafana:10.1.2
  #   restart: always
  #   volumes:
  #     # - /etc/localtime:/etc/localtime:ro
  #     - grafana_data:/var/lib/grafana
  #     - ./config/grafana/provisioning/:/etc/grafana/provisioning/
  #   depends_on:
  #     - prometheus
  #   ports:
  #     - 3030:3000
  #   env_file:
  #     - ./config/grafana/config.monitoring
  #   networks:
  #     - back-tier
  #     - front-tier
# {% if domain_name_enable and domain_name and domain_grafana %}
#     depends_on:
#       - nginx-proxy
#     environment:
#       - VIRTUAL_HOST=grafana.localhost:3030
#       - VIRTUAL_PORT=3000
# {% endif %}

  # ping:
  #   image: prom/blackbox-exporter:latest
  #   restart: always
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ./config/blackbox/config:/config
  #   expose:
  #     - 9115
  #   ports:
  #     - 9115:9115
  #   tty: true
  #   stdin_open: true
  #   command:
  #     - '--config.file=/config/blackbox.yml'
  #   networks:
  #     - back-tier
      
  # speedtest:
  #   image: miguelndecarvalho/speedtest-exporter:latest
  #   restart: always
  #   expose:
  #     - 9798
  #   ports:
  #     - 9798:9798
  #   networks:
  #     - back-tier

  samba:
    image: dperson/samba:latest
    container_name: samba
    tty: true
    restart: always
    ports:
      - "137:137/udp"
      - "138:138/udp"
      - "139:139/tcp"
      - "445:445/tcp"
    stdin_open: true
    environment:
      TZ: 'America/Lima'
    read_only: true
    tmpfs:
      - /tmp
    volumes:
      - ./volumens/samba/files:/samba/files
    command: '-u "alexpi;password;1000;alexpi;1000" -s "AlexPiDocs;/samba/files/alexpi;yes;no;yes;alexpi;alexpi;Alexpi documents"'
    networks:
      - front-tier

  web:
    image: nginx
    restart: always
    volumes:
      - ./templates:/usr/share/nginx/html:ro
    ports:
      - 8080:80
    networks:
      - front-tier